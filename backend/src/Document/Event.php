<?php

namespace App\Document;

use Doctrine\ODM\MongoDB\Mapping\Annotations as MongoDB;

/**
 *
 * @MongoDB\Document(collection="events")
 */
class Event
{
    /**
     * @var int $id event identifier
     * @MongoDB\Id(strategy="AUTO")
     *
     */
    private $id;

    /**
     * @var string $name event name
     * @MongoDB\Field(type="string")
     */
    private $name;

    /**
     * @var date $startDate start date and time of the event
     * @MongoDB\Field(type="date")
     */
    private $startDate;

    /**
     * @var date $endDate end date and time of the event
     * @MongoDB\Field(type="date")
     */
    private $endDate;

    /**
     * @var string $description event description
     * @MongoDB\Field(type="string")
     */
    private $description;

    /**
     * @var string $url event URL
     * @MongoDB\Field(type="string")
     */
    private $url;

    /**
     * @var string $ethContractId contract ID generated by Etherium
     * @MongoDB\Field(type="string")
     */
    private $ethContractId;

    /**
     * @var date $createdAt timestamp event creation
     * @MongoDB\Field(type="date")
     */
    private $createdAt;

    /**
     * @var date $updatedAt timestamp event update
     * @MongoDB\Field(type="date")
     */
    private $updatedAt;

    /**
     * @var int $category reference to category collection
     * @MongoDB\Field(type="integer")
     */
    private $category;

    public function getId()
    {
        return $this->id;
    }

    public function getName(): ?string
    {
        return $this->name;
    }

    public function setName(string $name): self
    {
        $this->name = $name;

        return $this;
    }

    public function getStartDate(): ?\DateTimeInterface
    {
        return $this->startDate;
    }

    public function setStartDate(\DateTimeInterface $startDate): self
    {
        $this->startDate = $startDate;

        return $this;
    }

    public function getEndDate(): ?\DateTimeInterface
    {
        return $this->endDate;
    }

    public function setEndDate(\DateTimeInterface $endDate): self
    {
        $this->endDate = $endDate;

        return $this;
    }

    public function getDescription(): ?string
    {
        return $this->description;
    }

    public function setDescription(string $description): self
    {
        $this->description = $description;

        return $this;
    }

    public function getEthContractId(): ?string
    {
        return $this->ethContractId;
    }

    public function setEthContractId(string $ethContractId): self
    {
        $this->ethContractId = $ethContractId;

        return $this;
    }

    public function getUrl(): ?string
    {
        return $this->$url;
    }

    public function setUrl(string $url): self
    {
        $this->url = $url;

        return $this;
    }

    public function getCreatedAt(): ?\DateTimeInterface
    {
        return $this->createdAt;
    }

    public function setCreatedAt(\DateTimeInterface $createdAt): self
    {
        $this->createdAt = $createdAt;

        return $this;
    }

    public function getUpdatedAt(): ?\DateTimeInterface
    {
        return $this->updatedAt;
    }

    public function setUpdatedAt(\DateTimeInterface $updatedAt): self
    {
        $this->updatedAt = $updatedAt;

        return $this;
    }

    public function getCategory(): ?int
    {
        return $this->category;
    }

    public function setCategory(int $category): self
    {
        $this->category = $category;

        return $this;
    }
}
